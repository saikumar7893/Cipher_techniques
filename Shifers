GCD OF TWO NUMBERS:
------------------

#include<stdio.h>
int main()
{
    int n,m;
    printf("enter the values of the n and m");
    scanf("%d,%d",&n,&m);
    while(n>0)
    {
        int r=m%n;
        m=n;
        n=r;
    }
    printf("gcd is %d",m);

}

-----------------------------------------------------------------------------
Vernam Cipher:

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
void encrypt(char *plaintext, char *key, char *ciphertext) {
  int i;
  for (i = 0; i < strlen(plaintext); i++) {
    ciphertext[i] = plaintext[i] ^ key[i];
  }
}
void decrypt(char *ciphertext, char *key, char *plaintext) {
  int i;
  for (i = 0; i < strlen(ciphertext); i++) {
    plaintext[i] = ciphertext[i] ^ key[i];
  }
}
int main(int argc, char *argv[]) {
  char plaintext[100];
  char key[100];
  char ciphertext[100];
printf("Enter plaintext: ");
scanf("%s", plaintext);
printf("Enter key: ");
scanf("%s", key);
encrypt(plaintext, key, ciphertext);
printf("Ciphertext: %s\n", ciphertext);
decrypt(ciphertext, key, plaintext);
printf("Plaintext: %s\n", plaintext);
  return 0;
}

----------------------------------------------------------------------------------------------------------------
Shift cipher:

#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<ctype.h>
int main(void)
{
    char plaintext[100],cipher[100];
    int key,i;
    printf("entere the plaintext");
    scanf("%s",plaintext);
    printf("enter tge key value");
    scanf("%d",&key);
    printf("the encryption is \n");
    for(int i=0;i<strlen(plaintext);i++)
    {
        cipher[i]=plaintext[i]+key;
        if(isupper(plaintext[i])&&(cipher[i]>'Z'))
        cipher[i]=cipher[i]-26;
        if(islower(plaintext[i])&&(cipher[i]>'z'))
        cipher[i]=cipher[i]-26;
        printf(" %c",cipher[i]);
        
    }
    
    printf("decryption \n");
    for(i=0;i<strlen(plaintext);i++)
    {
        plaintext[i]=cipher[i]-key;
        if(isupper(cipher[i])&&plaintext[i]<'A')
        plaintext[i]=plaintext[i]+26;
         if(islower(cipher[i])&&plaintext[i]<'a')
        plaintext[i]=plaintext[i]+26;
        printf("%c",plaintext[i]);
    }
    return 0;
    
}
-----------------------------------------------------------------------------------------------------------------
MonoAlphabtetic Cipher:
#include<stdio.h>
char mono(char);
char alpha[27][3]={{ 'a', 'f' }, { 'b', 'a' }, { 'c', 'g' }, { 'd', 'u' }, {
        'e', 'n' }, { 'f', 'i' }, { 'g', 'j' }, { 'h', 'k' }, { 'i', 'l' }, {
        'j', 'm' }, { 'k', 'o' }, { 'l', 'p' }, { 'm', 'q' }, { 'n', 'r' }, {
        'o', 's' }, { 'p', 't' }, { 'q', 'v' }, { 'r', 'w' }, { 's', 'x' }, {
        't', 'y' }, { 'u', 'z' }, { 'v', 'b' }, { 'w', 'c' }, { 'x', 'd' }, {
        'y', 'e' }, { 'z', 'h' } };
int main()
{
    char str1[10],str2[20];
    printf("enter tghe plainTextr");
    scanf("%s",str1);
    for(int i=0;str1[i];i++)
    {
        str2[i]=mono(str1[i]);
    }
    printf("cipher text is %s",str2);
   
}
    char mono(char a)
    {
        int i;
        for( i=0;i<27;i++)
        {
        if(a==alpha[i][0])
        break;
    }
    
    return alpha[i][1];
  
    
}
----------------------------------------------------------------------------------------------------------------------


